import requests


API_URL = "https://api.aiforthai.in.th/ssense"
API_KEY = "gK0Vz2qOEkRpEryj9HogwsD9rh4Zgjmd"

def analyze_text(text):
    """‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ AI For Thai API"""
    headers = {
        "Apikey": API_KEY,
        "Content-Type": "application/x-www-form-urlencoded",
    }
    payload = {"text": text}

    try:
        response = requests.post(API_URL, headers=headers, data=payload)

        if response.status_code == 200:
            try:
                response_data = response.json()
                print(f"üîç API Response: {response_data}")  # ‚úÖ Debug API response

                # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ key "sentiment" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                sentiment_data = response_data.get("sentiment", {})

                # ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ "polarity" ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏ö‡∏≠‡∏Å sentiment
                if "polarity" in sentiment_data:
                    return sentiment_data["polarity"]  # ‚úÖ ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ "positive", "negative", ‡∏´‡∏£‡∏∑‡∏≠ "neutral"

                print("‚ö†Ô∏è API Response ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ polarity")
                return None
            except ValueError:
                print("‚ö†Ô∏è API ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á JSON ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤")
                return None
        else:
            print(f"‚ö†Ô∏è API Error: {response.status_code} - {response.text}")
            return None

    except requests.RequestException as e:
        print(f"‚ö†Ô∏è Request Error: {e}")
        return None

import ollama

import ollama

def summarize_reviews_with_ollama(reviews):
    """‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Ollama DeepSeek-Coder"""
    review_texts = " ".join([review.comment for review in reviews])

    if len(review_texts) < 50:
        return "‚ùå ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡∏£‡∏∏‡∏õ"

    try:
        response = ollama.chat(model="deepseek-coder", messages=[
            {
                "role": "system",
                "content": (
                    "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô AI ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ "
                    "‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ "
                    "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß (‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏ä‡∏¥‡∏á‡∏ö‡∏ß‡∏Å ‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏ö ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏•‡∏≤‡∏á‡πÜ) "
                    "‡πÅ‡∏•‡∏∞‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏™‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡∏ï‡∏≠‡∏ö‡∏â‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"
                )
            },
            {"role": "user", "content": review_texts}
        ])
        return response["message"]["content"]
    except Exception as e:
        print(f"‚ö†Ô∏è Ollama Summarization Error: {e}")
        return "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ"


    
API_TRANSLATION_URL = "https://api.aiforthai.in.th/en-th-align"
API_KEY = "gK0Vz2qOEkRpEryj9HogwsD9rh4Zgjmd"

def translate_to_thai(text):
    """‡πÅ‡∏õ‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ó‡∏¢"""
    headers = {
        "Apikey": API_KEY,
        "Content-Type": "application/json",
    }
    payload = {"EN": text, "TH": ""}
    
    try:
        response = requests.post(API_TRANSLATION_URL, headers=headers, json=payload)
        if response.status_code == 200:
            result = response.json()
            return result.get("TH", "‚ùå ‡πÅ‡∏õ‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        else:
            return "‚ùå ‡πÅ‡∏õ‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
    except:
        return "‚ùå ‡πÅ‡∏õ‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
